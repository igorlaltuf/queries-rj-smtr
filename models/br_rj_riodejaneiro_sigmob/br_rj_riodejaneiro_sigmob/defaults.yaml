# Lista de views do dataset
# Atributos de cada view:
# - name: nome sem terminação .sql ou .yaml
# - materialized: true|false para materializar ou não
# - depends_on: lista de views das quais ela depende
views:
  agency_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.agency]
  calendar_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.calendar]
  linhas_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.linhas]
  frota_determinada_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.frota_determinada]
  routes_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.routes]
  shapes_geom:
    materialized: true
    depends_on: [br_rj_riodejaneiro_sigmob.shapes]
  stop_details_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.stop_details]
  stop_times_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.stop_times]
  stops_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.stops]
  trips_desaninhada:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.trips]
  agg_stops_vistoriadas:
    materialized: false
    depends_on: [br_rj_riodejaneiro_sigmob.stops]
  data_versao_efetiva:
    materialized: true
    depends_on: [br_rj_riodejaneiro_sigmob.routes]

# Definição de taxa de atualização
scheduling:
  cron: "0 4 * * *"

# Definição de particionamento
# - column: nome da coluna
# - type: deve ser um dos seguintes
#   * DATE (não exige período)
#   * DATE_TRUNC (exige período MONTH/YEAR)
#   * DATETIME_TRUNC (exige período DAY/HOUR/MONTH/YEAR)
#   * TIMESTAMP_TRUNC (exige período DAY/HOUR/MONTH/YEAR)
#   * <To-do> RANGE_BUCKET
#   * <To-do> GENERATE_ARRAY
# - period: período (conforme especificado acima)
partitioning:
  column: "data_versao"
  type: ""
  period: ""

# Parâmetros da query
parameters:
  agency: "rj-smtr.br_rj_riodejaneiro_sigmob.agency"
  calendar: "rj-smtr.br_rj_riodejaneiro_sigmob.calendar"
  frota_determinada: "rj-smtr.br_rj_riodejaneiro_sigmob.frota_determinada"
  holidays: "rj-smtr.br_rj_riodejaneiro_sigmob.holidays"
  linhas: "rj-smtr.br_rj_riodejaneiro_sigmob.linhas"
  routes: "rj-smtr.br_rj_riodejaneiro_sigmob.routes"
  shapes: "rj-smtr.br_rj_riodejaneiro_sigmob.shapes"
  shapes_geom: "rj-smtr.br_rj_riodejaneiro_sigmob.shapes_geom"
  stop_times: "rj-smtr.br_rj_riodejaneiro_sigmob.stop_times"
  stop_details: "rj-smtr.br_rj_riodejaneiro_sigmob.stop_details"
  stops: "rj-smtr.br_rj_riodejaneiro_sigmob.stops"
  trips: "rj-smtr.br_rj_riodejaneiro_sigmob.trips"

  # Data de início do sigmob
  ## Todos os dados anteriores a esta data serão comparados com ela
  ## Dados posteriores serão comparados por dia.
  data_inclusao_agency: "2021-08-03"
  data_inclusao_stop_times: "2021-08-03"
  data_inclusao_linhas: "2021-08-03"
  data_inclusao_routes: "2021-08-03"
  data_inclusao_trips: "2021-08-03"
  data_inclusao_shapes: "2021-08-24"
  data_inclusao_stops: "2021-08-24"
  data_inclusao_calendar: "2021-09-30"
  data_inclusao_frota_determinada: "2021-09-30"
  data_inclusao_stop_details: "2021-09-30"
  data_inclusao_holidays: "2021-11-05"

# Parâmetros de backfill
backfill:
  # Formato %Y-%m-%d %H:%M:%S
  start_timestamp: "2021-08-01 00:00:00"
  interval:
    days: 30
